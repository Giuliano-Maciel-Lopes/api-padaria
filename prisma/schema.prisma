// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  CUSTOMER
  ADMIN
  STOCK
  DELIVERY_PERSON
}

enum OrderStatus {
  PROCESSING
  SHIPPED
  COMPLETE
  ORDER_FINISH
  DELIVERED
}

model User {
  id        String   @id @default(uuid())
  name      String
  email     String   @unique
  password  String
  role      Role     @default(CUSTOMER)
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @default(now()) @updatedAt @map("updated_at")

    userInfo UserInfo?
  orders   Order[]

  @@map("users")
}

model UserInfo {
  id           String   @id @default(uuid())
  userId String @unique @map("user_id") 
  street       String
  houseNumber  String   @map("house_number")
  neighborhood String
  city         String
  phone        String   @map("phone") 
  createdAt    DateTime @default(now()) @map("created_at")
  updatedAt    DateTime @default(now()) @updatedAt @map("updated_at")

  user User @relation(fields: [userId], references: [id])

  @@map("user_infos")
}


model Product {
  id          String   @id @default(uuid())
  name        String
  description String?
  category    String
  imageUrl    String?
  price       Float
  isVitrine  Boolean  @default(false) 
  createdAt   DateTime @default(now()) @map("created_at")
  updatedAt   DateTime @default(now()) @updatedAt @map("updated_at")

  orderItems OrderItem[]
  stockByDay ProductDay[]

  @@map("products")
}

model DayOfWeek {
  id        String   @id @default(uuid())
  name      String
  createdAt DateTime @default(now()) @map("created_at")

  products ProductDay[]

  @@map("days_of_week")
}

model ProductDay {
  id          String   @id @default(uuid())
  productId   String   @map("product_id")
  dayOfWeekId String   @map("day_of_week_id")
  stock       Int      @default(0)
  createdAt   DateTime @default(now()) @map("created_at")
  updatedAt   DateTime @default(now()) @updatedAt @map("updated_at")

  product   Product   @relation(fields: [productId], references: [id])
  dayOfWeek DayOfWeek @relation(fields: [dayOfWeekId], references: [id])

  @@map("product_days")
}

model Order {
  id          String      @id @default(uuid())
  userId      String      @map("user_id")
  totalAmount Float       @default(0) @map("total_amount")
  status      OrderStatus @default(PROCESSING)
  createdAt   DateTime    @default(now()) @map("created_at")
  isHome      Boolean     @default(false)
  user        User        @relation(fields: [userId], references: [id])

  items OrderItem[]

  @@map("orders")
}

model OrderItem {
  id        String @id @default(uuid())
  orderId   String @map("order_id")
  productId String @map("product_id")
  quantity  Int
  unitPrice Float  @map("unit_price")

  order   Order   @relation(fields: [orderId], references: [id])
  product Product @relation(fields: [productId], references: [id])

  @@map("order_items")
}
